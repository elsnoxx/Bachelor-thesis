/**
 * Check if Web Bluetooth is available and ready to use
 */
export function checkBluetoothAvailability() {
  // First check if Bluetooth is supported by the browser
  if (!navigator.bluetooth) {
    console.error('‚ùå Web Bluetooth API nen√≠ podporov√°no v tomto prohl√≠≈æeƒçi.');
    alert('V√°≈° prohl√≠≈æeƒç nepodporuje Bluetooth p≈ôipojen√≠.\nPou≈æijte pros√≠m Chrome nebo Edge.');
    return false;
  }
  
  return true;
}

export async function connectToBLE() {
  // Check if Web Bluetooth API is available
  if (!checkBluetoothAvailability()) return;
  
  try {
    // Show instructions before requesting the device
    console.log('Povolte Bluetooth v dialogov√©m oknƒõ, kter√© se zobraz√≠...');
    
    const device = await navigator.bluetooth.requestDevice({
      filters: [{ services: ['battery_service'] }], // nahraƒè UUID slu≈æby tv√©ho za≈ô√≠zen√≠
      optionalServices: ['device_information']       // p≈ôidej, pokud pot≈ôebuje≈° dal≈°√≠ slu≈æby
    });

    const server = await device.gatt?.connect();
    console.log('‚úÖ P≈ôipojeno:', device.name);

    const service = await server?.getPrimaryService('battery_service');
    const characteristic = await service?.getCharacteristic('battery_level');

    const value = await characteristic?.readValue();
    console.log('üîã Hodnota:', value?.getUint8(0));

    // Nebo naslouchej zmƒõn√°m
    characteristic?.addEventListener('characteristicvaluechanged', (event) => {
      const val = (event.target as BluetoothRemoteGATTCharacteristic).value;
      console.log('üìà Nov√° hodnota:', val?.getUint8(0));
    });
    await characteristic?.startNotifications();

  } catch (error) {
    console.error('‚ùå Chyba p≈ôi p≈ôipojen√≠ k BLE:', error);
    
    // Provide more helpful error messages based on error type
    if (error.name === 'NotFoundError') {
      const message = 
        'Bluetooth je v prohl√≠≈æeƒçi zak√°z√°no.\n\n' +
        'Jak povolit Bluetooth:\n' +
        '1. Zadejte do adresn√≠ho ≈ô√°dku: chrome://flags\n' +
        '2. Vyhledejte "Bluetooth"\n' +
        '3. Povolte "Experimental Web Platform features"\n' +
        '4. Restartujte prohl√≠≈æeƒç';
      
      alert(message);
    } else if (error.name === 'SecurityError') {
      alert('Bluetooth vy≈æaduje zabezpeƒçen√© p≈ôipojen√≠ (HTTPS nebo localhost).');
    } else if (error.name === 'NotAllowedError') {
      alert('P≈ô√≠stup k Bluetooth byl zam√≠tnut. Zkuste to znovu a povolte p≈ô√≠stup.');
    } else {
      alert(`Chyba p≈ôi p≈ôipojen√≠ k BLE: ${error.message}`);
    }
  }
}